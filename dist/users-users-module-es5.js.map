{"version":3,"sources":["webpack:///src/app/users/add-edit.component.ts","webpack:///src/app/users/add-edit.component.html","webpack:///src/app/users/layout.component.ts","webpack:///src/app/users/layout.component.html","webpack:///src/app/users/list.component.ts","webpack:///src/app/users/list.component.html","webpack:///src/app/users/users-routing.module.ts","webpack:///src/app/users/users.module.ts"],"names":["AddEditComponent","formBuilder","route","router","accountService","alertService","loading","submitted","id","snapshot","params","isAddMode","passwordValidators","minLength","push","required","form","group","firstName","lastName","username","password","dob","country","getById","pipe","subscribe","x","f","setValue","clear","invalid","createUser","updateUser","register","value","data","success","keepAfterRouteChange","navigate","relativeTo","error","update","controls","onSubmit","templateUrl","styleUrls","LayoutComponent","ListComponent","users","getAll","user","find","isDeleting","filter","routes","path","component","children","UsersRoutingModule","forChild","imports","exports","UsersModule","declarations"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCG;;AAAsB;;AAAQ;;;;;;AAC7B;;AAAuB;;AAAS;;;;;;AAOhB;;AAAyC;;AAAsB;;;;;;AADnE;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAOL;;AAAwC;;AAAqB;;;;;;AADjE;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AASL;;AAAwC;;AAAoB;;;;;;AADhE;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAML;;AAAuB;;AAAuC;;;;;;AAI9D;;AAAwC;;AAAoB;;;;;;AAC5D;;AAAyC;;AAAsC;;;;;;AAFnF;;AACI;;AACA;;AACJ;;;;;;AAFS;;AAAA;;AACA;;AAAA;;;;;;AASL;;AAAmC;;AAAyB;;;;;;AADhE;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAOL;;AAAuC;;AAAmB;;;;;;AAD9D;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAMT;;;;;;;;;;QDlDHA,gB;AAOT,gCACYC,WADZ,EAEYC,KAFZ,EAGYC,MAHZ,EAIYC,cAJZ,EAKYC,YALZ,EAKsC;AAAA;;AAJ1B,aAAAJ,WAAA,GAAAA,WAAA;AACA,aAAAC,KAAA,GAAAA,KAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAC,cAAA,GAAAA,cAAA;AACA,aAAAC,YAAA,GAAAA,YAAA;AARZ,aAAAC,OAAA,GAAU,KAAV;AACA,aAAAC,SAAA,GAAY,KAAZ;AAQI;;;;mCAEO;AAAA;;AACP,eAAKC,EAAL,GAAU,KAAKN,KAAL,CAAWO,QAAX,CAAoBC,MAApB,CAA2B,IAA3B,CAAV;AACA,eAAKC,SAAL,GAAiB,CAAC,KAAKH,EAAvB,CAFO,CAIP;;AACA,cAAMI,kBAAkB,GAAG,CAAC,0DAAWC,SAAX,CAAqB,CAArB,CAAD,CAA3B;;AACA,cAAI,KAAKF,SAAT,EAAoB;AAChBC,8BAAkB,CAACE,IAAnB,CAAwB,0DAAWC,QAAnC;AACH;;AAED,eAAKC,IAAL,GAAY,KAAKf,WAAL,CAAiBgB,KAAjB,CAAuB;AAC/BC,qBAAS,EAAE,CAAC,EAAD,EAAK,0DAAWH,QAAhB,CADoB;AAE/BI,oBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWJ,QAAhB,CAFqB;AAG/BK,oBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWL,QAAhB,CAHqB;AAI/BM,oBAAQ,EAAE,CAAC,EAAD,EAAKT,kBAAL,CAJqB;AAK/BU,eAAG,EAAE,CAAC,EAAD,CAL0B;AAM/BC,mBAAO,EAAE,CAAC,EAAD;AANsB,WAAvB,CAAZ;;AASA,cAAI,CAAC,KAAKZ,SAAV,EAAqB;AACjB,iBAAKP,cAAL,CAAoBoB,OAApB,CAA4B,KAAKhB,EAAjC,EACKiB,IADL,CACU,8DADV,EAEKC,SAFL,CAEe,UAAAC,CAAC,EAAI;AACZ,mBAAI,CAACC,CAAL,CAAOV,SAAP,CAAiBW,QAAjB,CAA0BF,CAAC,CAACT,SAA5B;;AACA,mBAAI,CAACU,CAAL,CAAOT,QAAP,CAAgBU,QAAhB,CAAyBF,CAAC,CAACR,QAA3B;;AACA,mBAAI,CAACS,CAAL,CAAOR,QAAP,CAAgBS,QAAhB,CAAyBF,CAAC,CAACP,QAA3B;;AACA,mBAAI,CAACQ,CAAL,CAAON,GAAP,CAAWO,QAAX,CAAoBF,CAAC,CAACL,GAAtB;;AACA,mBAAI,CAACM,CAAL,CAAOL,OAAP,CAAeM,QAAf,CAAwBF,CAAC,CAACJ,OAA1B;AACH,aARL;AASH;AACJ,S,CAED;;;;mCAGW;AACP,eAAKhB,SAAL,GAAiB,IAAjB,CADO,CAGP;;AACA,eAAKF,YAAL,CAAkByB,KAAlB,GAJO,CAMP;;AACA,cAAI,KAAKd,IAAL,CAAUe,OAAd,EAAuB;AACnB;AACH;;AAED,eAAKzB,OAAL,GAAe,IAAf;;AACA,cAAI,KAAKK,SAAT,EAAoB;AAChB,iBAAKqB,UAAL;AACH,WAFD,MAEO;AACH,iBAAKC,UAAL;AACH;AACJ;;;qCAEoB;AAAA;;AACjB,eAAK7B,cAAL,CAAoB8B,QAApB,CAA6B,KAAKlB,IAAL,CAAUmB,KAAvC,EACKV,IADL,CACU,8DADV,EAEKC,SAFL,CAGQ,UAAAU,IAAI,EAAI;AACJ,kBAAI,CAAC/B,YAAL,CAAkBgC,OAAlB,CAA0B,yBAA1B,EAAqD;AAAEC,kCAAoB,EAAE;AAAxB,aAArD;;AACA,kBAAI,CAACnC,MAAL,CAAYoC,QAAZ,CAAqB,CAAC,GAAD,EAAM;AAAEC,wBAAU,EAAE,MAAI,CAACtC;AAAnB,aAAN,CAArB;AACH,WANT,EAOQ,UAAAuC,KAAK,EAAI;AACL,kBAAI,CAACpC,YAAL,CAAkBoC,KAAlB,CAAwBA,KAAxB;;AACA,kBAAI,CAACnC,OAAL,GAAe,KAAf;AACH,WAVT;AAWH;;;qCAEoB;AAAA;;AACjB,eAAKF,cAAL,CAAoBsC,MAApB,CAA2B,KAAKlC,EAAhC,EAAoC,KAAKQ,IAAL,CAAUmB,KAA9C,EACKV,IADL,CACU,8DADV,EAEKC,SAFL,CAGQ,UAAAU,IAAI,EAAI;AACJ,kBAAI,CAAC/B,YAAL,CAAkBgC,OAAlB,CAA0B,mBAA1B,EAA+C;AAAEC,kCAAoB,EAAE;AAAxB,aAA/C;;AACA,kBAAI,CAACnC,MAAL,CAAYoC,QAAZ,CAAqB,CAAC,IAAD,EAAO;AAAEC,wBAAU,EAAE,MAAI,CAACtC;AAAnB,aAAP,CAArB;AACH,WANT,EAOQ,UAAAuC,KAAK,EAAI;AACL,kBAAI,CAACpC,YAAL,CAAkBoC,KAAlB,CAAwBA,KAAxB;;AACA,kBAAI,CAACnC,OAAL,GAAe,KAAf;AACH,WAVT;AAWH;;;4BA/CO;AAAE,iBAAO,KAAKU,IAAL,CAAU2B,QAAjB;AAA4B;;;;;;;uBAhD7B3C,gB,EAAgB,2H,EAAA,+H,EAAA,uH,EAAA,6H,EAAA,2H;AAAA,K;;;YAAhBA,gB;AAAgB,mC;AAAA,e;AAAA,c;AAAA,s/B;AAAA;AAAA;ACR7B;;AACG;;AACC;;AACA;;AAAyB;AAAA,mBAAY,IAAA4C,QAAA,EAAZ;AAAsB,WAAtB;;AACrB;;AACI;;AACI;;AAAuB;;AAAU;;AACjC;;AACA;;AAGJ;;AACA;;AACI;;AAAsB;;AAAS;;AAC/B;;AACA;;AAGJ;;AACJ;;AACA;;AACI;;AACI;;AAAsB;;AAAQ;;AAC9B;;AACA;;AAGJ;;AACA;;AACI;;AACI;;AACA;;AACJ;;AACA;;AACA;;AAIJ;;AACJ;;AACA;;AACI;;AACI;;AAAiB;;AAAa;;AAC9B;;AACA;;AAGJ;;AACA;;AACI;;AAAqB;;AAAO;;AAC5B;;AACA;;AAGJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACJ;;AACA;;AAA4C;;AAAM;;AACtD;;AACJ;;AACJ;;;;AA/DO;;AAAA;;AACC;;AAAA;;AACE;;AAAA;;AAI0E;;AAAA;;AAC/D;;AAAA;;AAM8D;;AAAA;;AAC9D;;AAAA;;AAQ8D;;AAAA;;AAC9D;;AAAA;;AAOG;;AAAA;;AAE+D;;AAAA;;AAClE;;AAAA;;AASyD;;AAAA;;AACzD;;AAAA;;AAM6D;;AAAA;;AAC7D;;AAAA;;AAMD;;AAAA;;AACE;;AAAA;;;;;;;;;sEDlDT5C,gB,EAAgB;cAD5B,uDAC4B;eADlB;AAAE6C,qBAAW,EAAE,yBAAf;AAA0CC,mBAAS,EAAC,CAAC,0BAAD;AAApD,S;AACkB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AER7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAGaC,e;;;;;uBAAAA,e;AAAe,K;;;YAAfA,e;AAAe,mC;AAAA,c;AAAA,a;AAAA,4C;AAAA;AAAA;ACH5B;;AACI;;AACI;;AACJ;;AACJ;;;;;;;;;sEDDaA,e,EAAe;cAD3B,uDAC2B;eADjB;AAAEF,qBAAW,EAAE;AAAf,S;AACiB,Q;;;;;;;;;;;;;;;;;;AEH5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACwBwB;;;;;;AACA;;AAA+B;;AAAM;;;;;;;;AAVjD;;AACI;;AAAI;;AAAkB;;AACtB;;AAAI;;AAAiB;;AACrB;;AAAI;;AAAiB;;AACrB;;AAAI;;AAAY;;AAChB;;AAAI;;AAAgB;;AACpB;;AACI;;AAAqE;;AAAI;;AACzE;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACJ;;AACA;;AACJ;;AACJ;;AACJ;;;;;;AAZQ;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAEG;;AAAA;;AACiF;;AAAA;;AAC1E;;AAAA;;AACA;;AAAA;;;;;;AAIlB;;AACI;;AACI;;AACJ;;AACJ;;;;QD3BCG,a;AAGT,6BAAoB5C,cAApB,EAAoD;AAAA;;AAAhC,aAAAA,cAAA,GAAAA,cAAA;AAFpB,aAAA6C,KAAA,GAAQ,IAAR;AAEsD;;;;mCAE3C;AAAA;;AACP,eAAK7C,cAAL,CAAoB8C,MAApB,GACKzB,IADL,CACU,8DADV,EAEKC,SAFL,CAEe,UAAAuB,KAAK;AAAA,mBAAI,MAAI,CAACA,KAAL,GAAaA,KAAjB;AAAA,WAFpB;AAGH;;;mCAEUzC,E,EAAY;AAAA;;AACnB,cAAM2C,IAAI,GAAG,KAAKF,KAAL,CAAWG,IAAX,CAAgB,UAAAzB,CAAC;AAAA,mBAAIA,CAAC,CAACnB,EAAF,KAASA,EAAb;AAAA,WAAjB,CAAb;AACA2C,cAAI,CAACE,UAAL,GAAkB,IAAlB;AACA,eAAKjD,cAAL,WAA2BI,EAA3B,EACKiB,IADL,CACU,8DADV,EAEKC,SAFL,CAEe,YAAM;AACb,kBAAI,CAACuB,KAAL,GAAa,MAAI,CAACA,KAAL,CAAWK,MAAX,CAAkB,UAAA3B,CAAC;AAAA,qBAAIA,CAAC,CAACnB,EAAF,KAASA,EAAb;AAAA,aAAnB,CAAb;AACH,WAJL;AAKH;;;;;;;uBAnBQwC,a,EAAa,6H;AAAA,K;;;YAAbA,a;AAAa,mC;AAAA,e;AAAA,a;AAAA,ulB;AAAA;AAAA;ACN1B;;AACI;;AAAI;;AAAK;;AACT;;AAAwD;;AAAQ;;AAChE;;AACI;;AACI;;AACI;;AAAuB;;AAAU;;AACjC;;AAAuB;;AAAS;;AAChC;;AAAuB;;AAAQ;;AAC/B;;AAAuB;;AAAa;;AACpC;;AAAuB;;AAAO;;AAC9B;;AACJ;;AACJ;;AACA;;AACI;;AAcA;;AAKJ;;AACJ;;AACJ;;;;AArBgB;;AAAA;;AAcA;;AAAA;;;;;;;;;sEDvBHA,a,EAAa;cADzB,uDACyB;eADf;AAAEH,qBAAW,EAAE,qBAAf;AAAsCC,mBAAS,EAAC,CAAC,sBAAD;AAAhD,S;AACe,Q;;;;;;;;;;;;;;;;;;;;;;AEN1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOA,QAAMS,MAAM,GAAW,CACnB;AACIC,UAAI,EAAE,EADV;AACcC,eAAS,EAAE,iEADzB;AAEIC,cAAQ,EAAE,CACN;AAAEF,YAAI,EAAE,EAAR;AAAYC,iBAAS,EAAE;AAAvB,OADM,EAEN;AAAED,YAAI,EAAE,KAAR;AAAeC,iBAAS,EAAE;AAA1B,OAFM,EAGN;AAAED,YAAI,EAAE,UAAR;AAAoBC,iBAAS,EAAE;AAA/B,OAHM;AAFd,KADmB,CAAvB;;QAeaE,kB;;;;;YAAAA;;;;yBAAAA,kB;AAAkB,O;AAAA,gBAHlB,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAlBI,kB,EAAkB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEbA,kB,EAAkB;cAJ9B,sDAI8B;eAJrB;AACNE,iBAAO,EAAE,CAAC,6DAAaD,QAAb,CAAsBL,MAAtB,CAAD,CADH;AAENO,iBAAO,EAAE,CAAC,4DAAD;AAFH,S;AAIqB,Q;;;;;;;;;;;;;;;;;;ACtB/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAqBaC,W;;;;;YAAAA;;;;yBAAAA,W;AAAW,O;AAAA,gBAXX,CACL,4DADK,EAEL,kEAFK,EAGL,wEAHK,CAWW;;;;0HAAXA,W,EAAW;AAAA,uBALhB,iEAKgB,EAJhB,6DAIgB,EAHhB,oEAGgB;AAHA,kBAPhB,4DAOgB,EANhB,kEAMgB,EALhB,wEAKgB;AAGA,O;AARE,K;;;;;sEAQbA,W,EAAW;cAZvB,sDAYuB;eAZd;AACNF,iBAAO,EAAE,CACL,4DADK,EAEL,kEAFK,EAGL,wEAHK,CADH;AAMNG,sBAAY,EAAE,CACV,iEADU,EAEV,6DAFU,EAGV,oEAHU;AANR,S;AAYc,Q","file":"users-users-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AccountService, AlertService } from '@app/_services';\n\n@Component({ templateUrl: 'add-edit.component.html', styleUrls:['./add-edit.component.css'] })\nexport class AddEditComponent implements OnInit {\n    form: FormGroup;\n    id: string;\n    isAddMode: boolean;\n    loading = false;\n    submitted = false;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private accountService: AccountService,\n        private alertService: AlertService\n    ) {}\n\n    ngOnInit() {\n        this.id = this.route.snapshot.params['id'];\n        this.isAddMode = !this.id;\n        \n        // password not required in edit mode\n        const passwordValidators = [Validators.minLength(6)];\n        if (this.isAddMode) {\n            passwordValidators.push(Validators.required);\n        }\n\n        this.form = this.formBuilder.group({\n            firstName: ['', Validators.required],\n            lastName: ['', Validators.required],\n            username: ['', Validators.required],\n            password: ['', passwordValidators],\n            dob: ['', ],\n            country: ['', ]\n        });\n\n        if (!this.isAddMode) {\n            this.accountService.getById(this.id)\n                .pipe(first())\n                .subscribe(x => {\n                    this.f.firstName.setValue(x.firstName);\n                    this.f.lastName.setValue(x.lastName);\n                    this.f.username.setValue(x.username);\n                    this.f.dob.setValue(x.dob);\n                    this.f.country.setValue(x.country)\n                });\n        }\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.form.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // reset alerts on submit\n        this.alertService.clear();\n\n        // stop here if form is invalid\n        if (this.form.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        if (this.isAddMode) {\n            this.createUser();\n        } else {\n            this.updateUser();\n        }\n    }\n\n    private createUser() {\n        this.accountService.register(this.form.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.alertService.success('User added successfully', { keepAfterRouteChange: true });\n                    this.router.navigate(['.', { relativeTo: this.route }]);\n                },\n                error => {\n                    this.alertService.error(error);\n                    this.loading = false;\n                });\n    }\n\n    private updateUser() {\n        this.accountService.update(this.id, this.form.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.alertService.success('Update successful', { keepAfterRouteChange: true });\n                    this.router.navigate(['..', { relativeTo: this.route }]);\n                },\n                error => {\n                    this.alertService.error(error);\n                    this.loading = false;\n                });\n    }\n}","<div class=\"bg\" >   \n   <h1 *ngIf=\"isAddMode\">Add User</h1>\n    <h1 *ngIf=\"!isAddMode\">Edit User</h1>\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-row\">\n            <div class=\"form-group col\">\n                <label for=\"firstName\">First Name</label>\n                <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\n                <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\n                </div>\n            </div>\n            <div class=\"form-group col\">\n                <label for=\"lastName\">Last Name</label>\n                <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\n                <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\n                </div>\n            </div>\n        </div>\n        <div class=\"form-row\">\n            <div class=\"form-group col\">\n                <label for=\"username\">Username</label>\n                <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n                <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.username.errors.required\">Username is required</div>\n                </div>\n            </div>\n            <div class=\"form-group col\">\n                <label for=\"password\">\n                    Password\n                    <em *ngIf=\"!isAddMode\">(Leave blank to keep the same password)</em>\n                </label>\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                    <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\n                </div>\n            </div>\n        </div>\n        <div class=\"form-row\">    \n            <div class=\"form-group col\">\n                <label for=\"dob\">Date of Birth</label>\n                <input type=\"date\" formControlName=\"dob\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.dob.errors }\" />\n                <div *ngIf=\"submitted && f.dob.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.dob.errors.required\">Date of Birth is required</div>\n                </div>\n            </div>\n            <div class=\"form-group col\">\n                <label for=\"country\">Country</label>\n                <input type=\"text\" formControlName=\"country\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.country.errors }\" />\n                <div *ngIf=\"submitted && f.country.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.country.errors.required\">Country is required</div>\n                </div>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <button [disabled]=\"loading\" class=\"btn btn-primary\">\n                <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                Save\n            </button>\n            <a routerLink=\"/users\" class=\"btn btn-link\">Cancel</a>\n        </div>\n    </form>\n</div>    ","import { Component } from '@angular/core';\n\n@Component({ templateUrl: 'layout.component.html' })\nexport class LayoutComponent { }","<div class=\"p-4\">\n    <div class=\"container\">\n        <router-outlet></router-outlet>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { AccountService } from '@app/_services';\n\n@Component({ templateUrl: 'list.component.html', styleUrls:['./list.component.css'] })\nexport class ListComponent implements OnInit {\n    users = null;\n\n    constructor(private accountService: AccountService) {}\n\n    ngOnInit() {\n        this.accountService.getAll()\n            .pipe(first())\n            .subscribe(users => this.users = users);\n    }\n\n    deleteUser(id: string) {\n        const user = this.users.find(x => x.id === id);\n        user.isDeleting = true;\n        this.accountService.delete(id)\n            .pipe(first())\n            .subscribe(() => {\n                this.users = this.users.filter(x => x.id !== id) \n            });\n    }\n}","<div class=\"bg\">    \n    <h1>Users</h1>\n    <a routerLink=\"add\" class=\"btn btn-sm btn-success mb-2\">Add User</a>\n    <table class=\"text table table-striped\">\n        <thead>\n            <tr>\n                <th style=\"width: 18%\">First Name</th>\n                <th style=\"width: 18%\">Last Name</th>\n                <th style=\"width: 18%\">Username</th>\n                <th style=\"width: 22%\">Date of Birth</th>\n                <th style=\"width: 18%\">Country</th>\n                <th style=\"width: 6%\"></th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let user of users\">\n                <td>{{user.firstName}}</td>\n                <td>{{user.lastName}}</td>\n                <td>{{user.username}}</td>\n                <td>{{user.dob}}</td>\n                <td>{{user.country}}</td>\n                <td style=\"white-space: nowrap\">\n                    <a routerLink=\"edit/{{user.id}}\" class=\"btn btn-sm btn-primary mr-1\">Edit</a>\n                    <button (click)=\"deleteUser(user.id)\" class=\"btn btn-sm btn-danger btn-delete-user\" [disabled]=\"user.isDeleting\">\n                        <span *ngIf=\"user.isDeleting\" class=\"spinner-border spinner-border-sm\"></span>\n                        <span *ngIf=\"!user.isDeleting\">Delete</span>\n                    </button>\n                </td>\n            </tr>\n            <tr *ngIf=\"!users\">\n                <td colspan=\"4\" class=\"text-center\">\n                    <span class=\"spinner-border spinner-border-lg align-center\"></span>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>    ","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LayoutComponent } from './layout.component';\nimport { ListComponent } from './list.component';\nimport { AddEditComponent } from './add-edit.component';\n\nconst routes: Routes = [\n    {\n        path: '', component: LayoutComponent,\n        children: [\n            { path: '', component: ListComponent },\n            { path: 'add', component: AddEditComponent },\n            { path: 'edit/:id', component: AddEditComponent }\n        ]\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class UsersRoutingModule { }","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { UsersRoutingModule } from './users-routing.module';\nimport { LayoutComponent } from './layout.component';\nimport { ListComponent } from './list.component';\nimport { AddEditComponent } from './add-edit.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        UsersRoutingModule\n    ],\n    declarations: [\n        LayoutComponent,\n        ListComponent,\n        AddEditComponent\n    ]\n})\nexport class UsersModule { }"]}